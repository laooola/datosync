{
  "$schema": "http://interagent.github.io/interagent-hyper-schema",
  "title": "DatoCMS Site API",
  "description": "",
  "type": "object",
  "id": "dato-api",
  "links": [
    {
      "href": "https://site-api.datocms.com",
      "rel": "self"
    }
  ],
  "properties": {
    "session": {
      "$ref": "#/definitions/session"
    },
    "account": {
      "$ref": "#/definitions/account"
    },
    "user": {
      "$ref": "#/definitions/user"
    },
    "access_token": {
      "$ref": "#/definitions/access_token"
    },
    "plugin": {
      "$ref": "#/definitions/plugin"
    },
    "site": {
      "$ref": "#/definitions/site"
    },
    "menu_item": {
      "$ref": "#/definitions/menu_item"
    },
    "plan": {
      "$ref": "#/definitions/plan"
    },
    "deploy_event": {
      "$ref": "#/definitions/deploy_event"
    },
    "item_type": {
      "$ref": "#/definitions/item_type"
    },
    "field": {
      "$ref": "#/definitions/field"
    },
    "item": {
      "$ref": "#/definitions/item"
    },
    "item_version": {
      "$ref": "#/definitions/item_version"
    },
    "upload": {
      "$ref": "#/definitions/upload"
    },
    "upload_request": {
      "$ref": "#/definitions/upload_request"
    },
    "scheduled_publication": {
      "$ref": "#/definitions/scheduled_publication"
    },
    "search_result": {
      "$ref": "#/definitions/search_result"
    },
    "role": {
      "$ref": "#/definitions/role"
    },
    "webhook": {
      "$ref": "#/definitions/webhook"
    },
    "webhook_call": {
      "$ref": "#/definitions/webhook_call"
    },
    "deployment_environment": {
      "$ref": "#/definitions/deployment_environment"
    },
    "item_type_filter": {
      "$ref": "#/definitions/item_type_filter"
    }
  },
  "definitions": {
    "upload_request": {
      "position": 8,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Request a new upload",
          "href": "/upload-requests",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/upload_request/properties/type"
                  },
                  "attributes": {
                    "type": "object",
                    "description": "JSON API attributes",
                    "properties": {
                      "filename": {
                        "type": "string",
                        "description": "The original file name",
                        "example": "image.png"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/upload_request"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Upload permission",
      "description": "To upload a file in DatoCMS, first you need to obtain an upload permission through this API endpoint. The response will contain the S3 URL where you will be able to upload the file with a direct PUT request.",
      "type": "object",
      "required": ["type", "id", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "identity": {
          "$ref": "#/definitions/upload_request/definitions/id"
        },
        "type": {
          "type": ["string"],
          "description": "JSON API type field",
          "pattern": "^upload_request$",
          "example": "upload_request"
        },
        "id": {
          "type": "string",
          "description": "The S3 path where the file will be stored",
          "example": "/7/1455102967-image.png"
        },
        "attributes": {
          "type": "object",
          "description": "JSON API attributes",
          "properties": {
            "url": {
              "type": "string",
              "description": "The URL to use to upload the file with a direct PUT request",
              "example": "https://dato-images.s3-eu-west-1.amazonaws.com/7/1455102967-image.png?X-Amz-Credential=AKIAJDTXTZHHDUCKAUMA%2F20160210"
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/upload_request/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/upload_request/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/upload_request/definitions/attributes"
        }
      }
    },
    "item": {
      "position": 2,
      "links": [
        {
          "method": "POST",
          "rel": "validate_existing",
          "private": true,
          "title": "Validate existing record",
          "description": "Validates an existing record field",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/validate",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["id", "type", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/definitions/item/properties/id"
                  },
                  "type": {
                    "$ref": "#/definitions/item/definitions/type"
                  },
                  "attributes": {
                    "$ref": "#/definitions/item/definitions/attributes"
                  },
                  "meta": {
                    "type": "object"
                  },
                  "relationships": {
                    "type": "object",
                    "required": ["item_type"],
                    "additionalProperties": false,
                    "properties": {
                      "item_type": {
                        "type": "object",
                        "required": ["data"],
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "$ref": "#/definitions/item_type/definitions/data"
                          }
                        }
                      },
                      "creator": {
                        "type": "object",
                        "required": ["data"],
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "anyOf": [
                              {
                                "$ref": "#/definitions/account/definitions/data"
                              },
                              {
                                "$ref": "#/definitions/access_token/definitions/data"
                              },
                              {
                                "$ref": "#/definitions/user/definitions/data"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data", "included"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type"
                }
              }
            }
          }
        },
        {
          "method": "POST",
          "rel": "validate_new",
          "private": true,
          "title": "Validate new record",
          "description": "Validates a record field",
          "href": "/items/validate",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/item/definitions/type"
                  },
                  "attributes": {
                    "$ref": "#/definitions/item/definitions/attributes"
                  },
                  "meta": {
                    "type": "object"
                  },
                  "relationships": {
                    "type": "object",
                    "required": ["item_type"],
                    "additionalProperties": false,
                    "properties": {
                      "item_type": {
                        "type": "object",
                        "required": ["data"],
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "$ref": "#/definitions/item_type/definitions/data"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data", "included"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type"
                }
              }
            }
          }
        },
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new record",
          "href": "/items",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/item/definitions/type"
                  },
                  "attributes": {
                    "$ref": "#/definitions/item/definitions/attributes"
                  },
                  "meta": {
                    "type": "object"
                  },
                  "relationships": {
                    "type": "object",
                    "required": ["item_type"],
                    "additionalProperties": false,
                    "properties": {
                      "item_type": {
                        "type": "object",
                        "description": "The record model",
                        "required": ["data"],
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "$ref": "#/definitions/item_type/definitions/data"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data", "included"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type"
                }
              }
            }
          }
        },
        {
          "method": "POST",
          "rel": "duplicate",
          "title": "Duplicate",
          "description": "Duplicate a record",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/duplicate",
          "targetSchema": {
            "type": "object",
            "required": ["data", "included"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type"
                }
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update a record",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes"],
                "additionalProperties": false,
                "meta": {
                  "type": "object"
                },
                "properties": {
                  "type": {
                    "$ref": "#/definitions/item/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/item/properties/id"
                  },
                  "attributes": {
                    "$ref": "#/definitions/item/properties/attributes"
                  },
                  "relationships": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "creator": {
                        "type": "object",
                        "required": ["data"],
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "anyOf": [
                              {
                                "$ref": "#/definitions/account/definitions/data"
                              },
                              {
                                "$ref": "#/definitions/access_token/definitions/data"
                              },
                              {
                                "$ref": "#/definitions/user/definitions/data"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all records",
          "href": "/items",
          "schema": {
            "type": ["object"],
            "properties": {
              "filter[ids]": {
                "description": "IDs to fetch, comma separated",
                "example": "12,31",
                "type": ["string"]
              },
              "filter[type]": {
                "description": "model ID to filter",
                "example": "44",
                "type": ["string"]
              },
              "filter[query]": {
                "description": "textual query to match",
                "example": "foo",
                "type": ["string"]
              },
              "page[offset]": {
                "description": "index of first record to fetch",
                "example": 2,
                "default": 1,
                "type": ["integer"]
              },
              "page[limit]": {
                "description": "number of records to fetch",
                "example": 15,
                "default": 30,
                "type": ["integer"]
              },
              "version": {
                "description": "whether you want the currently published versions of your records, or the latest available",
                "example": "published",
                "default": "latest",
                "type": ["string"]
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item"
                }
              },
              "meta": {
                "type": "object",
                "required": ["total_count"],
                "additionalProperties": false,
                "properties": {
                  "total_count": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "references",
          "title": "References",
          "private": true,
          "description": "List all the records of a model that link to a specific record",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/references/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a record",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": ["object"],
            "properties": {
              "version": {
                "description": "whether you want the currently published version of the record, or the latest available",
                "example": "published",
                "default": "latest",
                "type": ["string"]
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a record",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "batch_destroy",
          "title": "Batch delete",
          "description": "Delete multiple records",
          "href": "/items",
          "schema": {
            "type": ["object"],
            "properties": {
              "filter[ids]": {
                "description": "IDs to fetch, comma separated",
                "example": "42,554",
                "type": ["string"]
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/job"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "batch_publish",
          "title": "Batch publish",
          "description": "Publish multiple records",
          "href": "/items/publish",
          "schema": {
            "type": ["object"],
            "properties": {
              "filter[ids]": {
                "description": "IDs to fetch, comma separated",
                "example": "42,86",
                "type": ["string"]
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/job"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "batch_unpublish",
          "title": "Batch unpublish",
          "description": "Unpublish multiple records",
          "href": "/items/unpublish",
          "schema": {
            "type": ["object"],
            "properties": {
              "filter[ids]": {
                "description": "IDs to fetch, comma separated",
                "example": "42,86",
                "type": ["string"]
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/job"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "publish",
          "title": "Publish",
          "description": "Publish a record",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/publish",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type"
                }
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "unpublish",
          "title": "Unpublish",
          "description": "Unpublish a record",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/unpublish",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type"
                }
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Record",
      "description": "DatoCMS stores the individual pieces of content you create from a model as records, which are much like table rows in a database. For backward-compatibility reasons, the API refers to records as \"items\".",
      "type": "object",
      "required": ["type", "id", "relationships"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/item/properties/type"
            },
            "id": {
              "$ref": "#/definitions/item/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/item/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^item$",
          "example": "item"
        },
        "id": {
          "description": "ID of record",
          "type": "string",
          "example": "4235"
        },
        "attributes": {
          "description": "The JSON data associated to the record",
          "type": "object",
          "example": {
            "title": "My first blog post!",
            "content": "Lorem ipsum dolor sit amet...",
            "category": "24",
            "image": "1235"
          }
        },
        "meta": {
          "type": "object",
          "description": "Meta information regarding the record",
          "additionalProperties": false,
          "properties": {
            "created_at": {
              "description": "Date of creation",
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "description": "Last update time",
              "type": "string",
              "format": "date-time"
            },
            "published_at": {
              "description": "Date of last publication",
              "type": ["null", "string"],
              "format": "date-time"
            },
            "first_published_at": {
              "description": "Date of first publication",
              "type": ["null", "string"],
              "format": "date-time"
            },
            "publication_scheduled_at": {
              "description": "Date of future publication",
              "type": ["null", "string"],
              "format": "date-time"
            },
            "status": {
              "description": "Status",
              "type": ["null", "string"],
              "enum": ["draft", "updated", "published"]
            },
            "is_valid": {
              "description": "Whether the current item is valid or not",
              "type": "boolean"
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["item_type"],
          "additionalProperties": false,
          "properties": {
            "item_type": {
              "description": "The record's model",
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/item_type/definitions/data"
                }
              }
            },
            "creator": {
              "description": "The entity (account/editor/access token) who created the record",
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/account/definitions/data"
                    },
                    {
                      "$ref": "#/definitions/access_token/definitions/data"
                    },
                    {
                      "$ref": "#/definitions/user/definitions/data"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/item/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/item/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/item/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/item/definitions/relationships"
        },
        "meta": {
          "$ref": "#/definitions/item/definitions/meta"
        }
      }
    },
    "item_version": {
      "links": [],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Record version",
      "description": "",
      "type": "object",
      "required": ["type", "id", "attributes", "relationships"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/item_version/properties/type"
            },
            "id": {
              "$ref": "#/definitions/item_version/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/item_version/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^item_version$",
          "example": "item_version"
        },
        "id": {
          "description": "ID of item_version",
          "type": "string",
          "example": "4235"
        },
        "attributes": {
          "description": "The JSON data associated to the item_version",
          "type": "object",
          "example": {
            "title": "My first blog post!",
            "content": "Lorem ipsum dolor sit amet...",
            "category": "24",
            "image": {
              "path": "/205/1516802387-foobar.png",
              "width": 1905,
              "height": 6472,
              "format": "png",
              "size": 1596377,
              "alt": null,
              "title": null
            },
            "published_at": "2016-09-20T18:50:24.914Z"
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["item", "editor"],
          "additionalProperties": false,
          "properties": {
            "item": {
              "description": "The records' version",
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/item/definitions/data"
                }
              }
            },
            "editor": {
              "description": "Editor",
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/user/definitions/data"
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/item_version/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/item_version/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/item_version/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/item_version/definitions/relationships"
        }
      }
    },
    "site": {
      "position": 1,
      "links": [
        {
          "rel": "self",
          "method": "GET",
          "title": "Show",
          "description": "Retrieve the site",
          "href": "/site",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/site"
              },
              "included": {
                "type": "array",
                "items": {
                  "type": "object",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/menu_item"
                    },
                    {
                      "$ref": "#/definitions/user"
                    },
                    {
                      "$ref": "#/definitions/item_type"
                    },
                    {
                      "$ref": "#/definitions/role"
                    },
                    {
                      "$ref": "#/definitions/field"
                    },
                    {
                      "$ref": "#/definitions/upload"
                    }
                  ]
                }
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update the site's settings",
          "href": "/site",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/site/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/site/properties/id"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "no_index": {
                        "$ref": "#/definitions/site/definitions/attributes/properties/no_index"
                      },
                      "favicon": {
                        "$ref": "#/definitions/site/definitions/attributes/properties/favicon"
                      },
                      "global_seo": {
                        "$ref": "#/definitions/site/definitions/attributes/properties/global_seo"
                      },
                      "name": {
                        "$ref": "#/definitions/site/definitions/attributes/properties/name"
                      },
                      "theme": {
                        "$ref": "#/definitions/site/definitions/attributes/properties/theme"
                      },
                      "locales": {
                        "$ref": "#/definitions/site/definitions/attributes/properties/locales"
                      },
                      "timezone": {
                        "$ref": "#/definitions/site/definitions/attributes/properties/timezone"
                      },
                      "require_2fa": {
                        "$ref": "#/definitions/site/definitions/attributes/properties/require_2fa"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/site"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Site",
      "description": "A site represents a specific DatoCMS administrative area",
      "type": "object",
      "required": ["type", "id", "relationships", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/site/properties/type"
            },
            "id": {
              "$ref": "#/definitions/site/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/site/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^site$",
          "example": "site"
        },
        "id": {
          "description": "ID of site",
          "type": "string",
          "example": "155"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": ["name", "locales", "domain", "theme"],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "Site name",
              "example": "My Awesome Website"
            },
            "domain": {
              "type": ["string", "null"],
              "description": "Administrative area custom domain",
              "example": "admin.my-awesome-website.com"
            },
            "imgix_host": {
              "type": ["string", "null"],
              "description": "Imgix host",
              "example": "www.datocms-assets.com"
            },
            "internal_domain": {
              "type": ["string", "null"],
              "description": "DatoCMS internal domain for the administrative area",
              "example": "my-website.admin.datocms.com"
            },
            "locales": {
              "type": "array",
              "description": "Available locales",
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "example": ["en"]
            },
            "timezone": {
              "type": "string",
              "description": "Site default timezone",
              "example": "Europe/London"
            },
            "items_count": {
              "type": "integer",
              "description": "Number of items present in the site",
              "example": 812
            },
            "no_index": {
              "type": "boolean",
              "description": "Whether the website needs to be indexed by search engines or not",
              "example": true
            },
            "favicon": {
              "description": "The upload id for the favicon",
              "example": "123",
              "type": ["string", "null"]
            },
            "theme_hue": {
              "description": "Specifies the hue to use primary color in Site backend",
              "type": "integer",
              "example": 167
            },
            "last_data_change_at": {
              "description": "Specifies the last time when a change of data occurred",
              "type": ["null", "string"],
              "format": "date-time",
              "example": "2017-03-30T09:29:14.872Z"
            },
            "last_dump_at": {
              "description": "Specifies the last time an integration plugin called the API",
              "type": ["null", "string"],
              "format": "date-time",
              "example": "2017-02-10T11:03:42.208Z"
            },
            "deployable": {
              "description": "Specifies whether all the deploy informations are correctly setup or not",
              "type": "boolean",
              "example": true
            },
            "frontend_url": {
              "type": ["string", "null"],
              "description": "Frontend website url",
              "example": "https://www.mywebsite.com/"
            },
            "require_2fa": {
              "description": "Specifies whether all users of this site need to authenticate using two-factor authentication",
              "type": "boolean",
              "example": false
            },
            "theme": {
              "description": "Specifies the theme to use in administrative area",
              "type": "object",
              "properties": {
                "primary_color": {
                  "type": "object",
                  "required": ["red", "green", "blue", "alpha"],
                  "properties": {
                    "red": {
                      "type": "integer",
                      "example": 128
                    },
                    "green": {
                      "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color/properties/red"
                    },
                    "blue": {
                      "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color/properties/red"
                    },
                    "alpha": {
                      "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color/properties/red"
                    }
                  }
                },
                "light_color": {
                  "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color"
                },
                "accent_color": {
                  "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color"
                },
                "dark_color": {
                  "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color"
                },
                "logo": {
                  "description": "The site logo",
                  "example": "123",
                  "type": ["string", "null"]
                }
              }
            },
            "global_seo": {
              "description": "Specifies default global settings",
              "type": ["object", "null"],
              "properties": {
                "site_name": {
                  "type": ["string"],
                  "description": "Site name, used in social sharing",
                  "example": "My Awesome Website"
                },
                "fallback_seo": {
                  "type": ["object"],
                  "required": ["title", "description", "image"],
                  "properties": {
                    "title": {
                      "type": ["string"],
                      "example": "Default meta title"
                    },
                    "description": {
                      "type": ["string"],
                      "example": "Default meta description"
                    },
                    "image": {
                      "type": ["null", "string"],
                      "description": "The id of the image",
                      "example": "123"
                    },
                    "twitter_card": {
                      "type": ["null", "string"],
                      "enum": ["summary", "summary_large_image"],
                      "description": "Determines how a Twitter link preview is shown",
                      "example": "Large Image"
                    }
                  }
                },
                "title_suffix": {
                  "type": ["null", "string"],
                  "example": " - My Awesome Website",
                  "description": "Title meta tag suffix"
                },
                "facebook_page_url": {
                  "type": ["null", "string"],
                  "description": "URL of facebook page",
                  "example": "http://facebook.com/awesomewebsite"
                },
                "twitter_account": {
                  "type": ["null", "string"],
                  "description": "Twitter account associated to website",
                  "example": "@awesomewebsite"
                }
              }
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": [
            "menu_items",
            "item_types",
            "account",
            "users",
            "roles",
            "active_plan"
          ],
          "additionalProperties": false,
          "properties": {
            "account": {
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/account/definitions/data"
                }
              }
            },
            "deployment_environments": {
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The list of deployment environment",
                  "items": {
                    "$ref": "#/definitions/deployment_environment/definitions/data"
                  }
                }
              }
            },
            "active_plan": {
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/plan/definitions/data"
                }
              }
            },
            "menu_items": {
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The list of site menu items",
                  "items": {
                    "$ref": "#/definitions/menu_item/definitions/data"
                  }
                }
              }
            },
            "users": {
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The list of site users",
                  "items": {
                    "$ref": "#/definitions/user/definitions/data"
                  }
                }
              }
            },
            "item_types": {
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "description": "The list of site item types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/item_type/definitions/data"
                  }
                }
              }
            },
            "roles": {
              "type": "object",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "description": "The list of site roles",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/role/definitions/data"
                  }
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/site/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/site/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/site/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/site/definitions/relationships"
        }
      }
    },
    "menu_item": {
      "position": 6,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new menu item",
          "href": "/menu-items",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/menu_item/definitions/type"
                  },
                  "attributes": {
                    "$ref": "#/definitions/menu_item/definitions/attributes"
                  },
                  "relationships": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "item_type": {
                        "$ref": "#/definitions/menu_item/definitions/relationships/properties/item_type"
                      },
                      "parent": {
                        "$ref": "#/definitions/menu_item/definitions/relationships/properties/parent"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/menu_item"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update a menu item",
          "href": "/menu-items/{(%2Fschemata%2Fmenu_item%23%2Fdefinitions%2Fmenu_item%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/menu_item/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/menu_item/properties/id"
                  },
                  "attributes": {
                    "$ref": "#/definitions/menu_item/properties/attributes"
                  },
                  "relationships": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "item_type": {
                        "$ref": "#/definitions/menu_item/definitions/relationships/properties/item_type"
                      },
                      "parent": {
                        "$ref": "#/definitions/menu_item/definitions/relationships/properties/parent"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/menu_item"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all menu items",
          "href": "/menu-items",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/menu_item"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a menu item",
          "href": "/menu-items/{(%2Fschemata%2Fmenu_item%23%2Fdefinitions%2Fmenu_item%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/menu_item"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a menu item",
          "href": "/menu-items/{(%2Fschemata%2Fmenu_item%23%2Fdefinitions%2Fmenu_item%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/menu_item"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Menu Item",
      "description": "In DatoCMS you can organize the different Models present in your administrative area reordering and grouping them, so that their purpose will be more clear to the final editor.",
      "type": "object",
      "required": ["type", "id", "relationships", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/menu_item/properties/type"
            },
            "id": {
              "$ref": "#/definitions/menu_item/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/menu_item/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^menu_item$",
          "example": "menu_item"
        },
        "id": {
          "description": "ID of menu item",
          "type": "string",
          "example": "34"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": ["label", "position"],
          "additionalProperties": false,
          "properties": {
            "label": {
              "type": "string",
              "description": "The label of the menu item",
              "example": "Posts"
            },
            "external_url": {
              "type": ["null", "string"]
            },
            "position": {
              "type": "integer",
              "description": "Ordering index",
              "example": 1
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["item_type", "parent", "children"],
          "additionalProperties": false,
          "properties": {
            "item_type": {
              "type": "object",
              "description": "item type associated with the menu item",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/item_type/definitions/data"
                    },
                    {
                      "type": ["null"]
                    }
                  ]
                }
              }
            },
            "parent": {
              "type": "object",
              "description": "Parent menu item",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "type": ["null"]
                    },
                    {
                      "$ref": "#/definitions/menu_item/definitions/data"
                    }
                  ],
                  "example": null
                }
              }
            },
            "children": {
              "type": "object",
              "description": "Underlying menu items",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/menu_item/definitions/data"
                  }
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/menu_item/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/menu_item/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/menu_item/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/menu_item/definitions/relationships"
        }
      }
    },
    "deploy_event": {
      "position": 7,
      "links": [
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all deploy events",
          "href": "/deploy-events",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/deploy_event"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a deploy event",
          "href": "/deploy-events/{(%2Fschemata%2Fdeploy_event%23%2Fdefinitions%2Fdeploy_event%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/deploy_event"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Deploy activity",
      "description": "Represents an event occurred during the deploy process of your administrative area.",
      "type": "object",
      "required": ["type", "id", "attributes", "relationships"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/deploy_event/properties/type"
            },
            "id": {
              "$ref": "#/definitions/deploy_event/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/deploy_event/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^deploy_event$",
          "example": "deploy_event"
        },
        "id": {
          "description": "ID of menu item",
          "type": "string",
          "example": "34"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": ["event_type", "data", "created_at"],
          "additionalProperties": false,
          "properties": {
            "event_type": {
              "type": "string",
              "enum": [
                "request",
                "request_failed",
                "response_success",
                "response_failure",
                "response_timeout"
              ],
              "description": "The type of activity",
              "example": "response_success"
            },
            "created_at": {
              "description": "The moment the activity occurred",
              "type": ["string"],
              "format": "date-time",
              "example": "2016-09-20T18:50:24.914Z"
            },
            "data": {
              "description": "Any details regarding the event",
              "type": ["object"],
              "example": {
                "request_body": "{\"object_kind\":\"build\",\"ref\":\"master\",\"tag\":false,\"before_sha\":\"0000000000000000000000000000000000000000\",\"sha\":\"ecfccf5ea28af900c14b499a2b762e029c7492\",\"build_id\":10495,\"build_name\":\"build\",\"build_stage\":\"test\",\"build_status\":\"success\",\"build_started_at\":\"2016-09-20 18:49:22 UTC\",\"build_finished_at\":\"2016-09-20 18:50:24 UTC\",\"build_duration\":62.279854524,\"build_allow_failure\":false,\"project_id\":195,\"project_name\":\"Stefano Verna / awesome-website\",\"user\":{\"id\":null,\"name\":null,\"email\":null},\"commit\":{\"id\":6754,\"sha\":\"ecfccf5ea28af900c6614b499a2b762e029c7492\",\"message\":\"Update gems\\n\",\"author_name\":\"Stefano Verna\",\"author_email\":\"s.verna@datocms.com\",\"status\":\"success\",\"duration\":62,\"started_at\":\"2016-09-20 18:49:22 UTC\",\"finished_at\":\"2016-09-20 18:50:24 UTC\"},\"repository\":{\"name\":\"awesome-website\",\"url\":\"git@gitlab.com:stefanoverna/awesome-website.git\",\"description\":\"\",\"visibility_level\":0}}",
                "request_headers": {
                  "Via": "1.1 vegur",
                  "Host": "webhooks.datocms.com",
                  "Origin": null,
                  "Version": "HTTP/1.1",
                  "Connection": "close",
                  "Connect-Time": "0",
                  "X-Request-Id": "5c1beced-0fe3-4c5b-b45d-68ba4a15b5f3",
                  "X-Gitlab-Event": "Build Hook",
                  "X-Forwarded-For": "46.101.135.219",
                  "X-Request-Start": "1474397424903",
                  "Total-Route-Time": "0",
                  "X-Forwarded-Port": "443",
                  "X-Forwarded-Proto": "https"
                }
              }
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["deployment_environment"],
          "additionalProperties": false,
          "properties": {
            "deployment_environment": {
              "type": "object",
              "description": "Source deployment environment",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/deployment_environment/definitions/data"
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/deploy_event/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/deploy_event/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/deploy_event/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/deploy_event/definitions/relationships"
        }
      }
    },
    "account": {
      "links": [],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "type": "object",
      "title": "Account",
      "description": "DatoCMS account",
      "required": ["type", "id", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/account/properties/type"
            },
            "id": {
              "$ref": "#/definitions/account/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/account/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^account$",
          "example": "account"
        },
        "id": {
          "description": "ID of account",
          "type": "string",
          "example": "312"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": ["email", "name", "company"],
          "additionalProperties": false,
          "properties": {
            "email": {
              "type": "string",
              "description": "Email",
              "example": "foo@bar.com"
            },
            "name": {
              "type": ["string", "null"],
              "description": "Name",
              "example": "Mark Smith"
            },
            "company": {
              "type": ["string", "null"],
              "description": "Company name",
              "example": "Dundler Mifflin"
            },
            "password": {
              "type": "string",
              "description": "Password"
            },
            "api_token": {
              "type": "string",
              "description": "API token"
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/account/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/account/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/account/definitions/attributes"
        }
      }
    },
    "item_type": {
      "position": 3,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new model",
          "href": "/item-types",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/item_type/definitions/type"
                  },
                  "attributes": {
                    "description": "JSON API attributes",
                    "type": "object",
                    "required": ["name", "api_key"],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/name"
                      },
                      "api_key": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/api_key"
                      },
                      "singleton": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/singleton"
                      },
                      "all_locales_required": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/all_locales_required"
                      },
                      "sortable": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/sortable"
                      },
                      "modular_block": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/modular_block"
                      },
                      "draft_mode_active": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/draft_mode_active"
                      },
                      "tree": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/tree"
                      },
                      "ordering_direction": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/ordering_direction"
                      },
                      "collection_appeareance": {
                        "$ref": "#/definitions/item_type/definitions/attributes/properties/collection_appeareance"
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "ordering_field": {
                        "$ref": "#/definitions/item_type/definitions/relationships/properties/ordering_field"
                      },
                      "title_field": {
                        "$ref": "#/definitions/item_type/definitions/relationships/properties/title_field"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item_type"
              },
              "included": {
                "type": "array",
                "items": {
                  "type": "object",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/menu_item"
                    }
                  ]
                }
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update a model",
          "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/item_type/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/item_type/properties/id"
                  },
                  "attributes": {
                    "$ref": "#/definitions/item_type/properties/attributes"
                  },
                  "relationships": {
                    "type": "object",
                    "required": ["ordering_field", "title_field"],
                    "additionalProperties": false,
                    "properties": {
                      "ordering_field": {
                        "$ref": "#/definitions/item_type/definitions/relationships/properties/ordering_field"
                      },
                      "title_field": {
                        "$ref": "#/definitions/item_type/definitions/relationships/properties/title_field"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item_type"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all models",
          "href": "/item-types",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a model",
          "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item_type"
              }
            }
          }
        },
        {
          "method": "POST",
          "rel": "duplicate",
          "title": "Duplicate",
          "description": "Duplicate model",
          "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}/duplicate",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item_type"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a model",
          "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item_type"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Model",
      "description": "The way you define the kind of content you can edit inside your administrative area passes through the concept of Models, which are much like database tables. For backward-compatibility reasons, the API refers to models as \"item types\".",
      "type": "object",
      "required": ["type", "id", "relationships", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/item_type/properties/type"
            },
            "id": {
              "$ref": "#/definitions/item_type/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/item_type/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^item_type$",
          "example": "item_type"
        },
        "id": {
          "description": "ID of item type",
          "type": "string",
          "example": "44"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": [
            "name",
            "api_key",
            "singleton",
            "sortable",
            "modular_block",
            "tree",
            "ordering_direction",
            "draft_mode_active",
            "all_locales_required",
            "collection_appeareance"
          ],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "example": "Blog post"
            },
            "api_key": {
              "type": "string",
              "example": "post"
            },
            "collection_appeareance": {
              "type": "string",
              "enum": ["compact", "table"],
              "example": "compact"
            },
            "singleton": {
              "type": "boolean",
              "example": false
            },
            "all_locales_required": {
              "type": "boolean",
              "example": false
            },
            "sortable": {
              "type": "boolean",
              "example": true
            },
            "modular_block": {
              "type": "boolean",
              "example": false
            },
            "draft_mode_active": {
              "type": "boolean",
              "example": false
            },
            "tree": {
              "type": "boolean",
              "example": false
            },
            "ordering_direction": {
              "type": ["string", "null"],
              "example": null,
              "enum": [null, "asc", "desc"]
            },
            "has_singleton_item": {
              "type": ["boolean"],
              "example": true
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["fields"],
          "additionalProperties": false,
          "properties": {
            "menu_item": {
              "type": "object",
              "description": "The menu item instance related to this item type",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/menu_item/definitions/data"
                    },
                    {
                      "type": ["null"]
                    }
                  ],
                  "example": null
                }
              }
            },
            "singleton_item": {
              "type": "object",
              "description": "The item instance related to this item type",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/item/definitions/data"
                    },
                    {
                      "type": ["null"]
                    }
                  ],
                  "example": null
                }
              }
            },
            "fields": {
              "type": "object",
              "description": "The list of item type fields",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/field/definitions/data"
                  }
                }
              }
            },
            "title_field": {
              "type": "object",
              "description": "The field to use as display title",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/field/definitions/data"
                    },
                    {
                      "type": ["null"]
                    }
                  ],
                  "example": null
                }
              }
            },
            "ordering_field": {
              "type": "object",
              "description": "The field upon which the collection is sorted",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/field/definitions/data"
                    },
                    {
                      "type": ["null"]
                    }
                  ],
                  "example": null
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/item_type/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/item_type/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/item_type/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/item_type/definitions/relationships"
        }
      }
    },
    "field": {
      "position": 4,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new field",
          "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}/fields",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/field/definitions/type"
                  },
                  "attributes": {
                    "description": "JSON API attributes",
                    "type": "object",
                    "required": ["label", "field_type", "api_key"],
                    "additionalProperties": false,
                    "properties": {
                      "label": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/label"
                      },
                      "field_type": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/field_type"
                      },
                      "api_key": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/api_key"
                      },
                      "localized": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/localized"
                      },
                      "validators": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/validators"
                      },
                      "appeareance": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/appeareance"
                      },
                      "position": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/position"
                      },
                      "hint": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/hint"
                      },
                      "default_value": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/default_value"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/field"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type"
                }
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update a field",
          "href": "/fields/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Ffield%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/field/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/field/properties/id"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "default_value": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/default_value"
                      },
                      "label": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/label"
                      },
                      "api_key": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/api_key"
                      },
                      "localized": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/localized"
                      },
                      "validators": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/validators"
                      },
                      "appeareance": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/appeareance"
                      },
                      "position": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/position"
                      },
                      "field_type": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/field_type"
                      },
                      "hint": {
                        "$ref": "#/definitions/field/definitions/attributes/properties/hint"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/field"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all fields",
          "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}/fields",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/field"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a field",
          "href": "/fields/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Ffield%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/field"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a field",
          "href": "/fields/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Ffield%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/field"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type"
                }
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Field",
      "description": "Each Model consists of a set of fields. Using the database metaphore, fields are like table columns, and when creating them you need to specify their type (\"string\", \"image\", \"float\", etc.) and any required validation.",
      "type": "object",
      "required": ["type", "id", "attributes", "relationships"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/field/properties/type"
            },
            "id": {
              "$ref": "#/definitions/field/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/field/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^field$",
          "example": "field"
        },
        "id": {
          "description": "ID of field",
          "type": "string",
          "example": "124"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": [
            "label",
            "field_type",
            "api_key",
            "localized",
            "validators",
            "appeareance",
            "position",
            "hint"
          ],
          "additionalProperties": false,
          "properties": {
            "label": {
              "type": "string",
              "description": "The label of the field",
              "example": "Title"
            },
            "field_type": {
              "type": "string",
              "description": "Type of input",
              "example": "string"
            },
            "default_value": {
              "type": ["boolean", "null", "string", "object", "number"],
              "description": "Default value for Field",
              "example": "some default value"
            },
            "localized": {
              "type": "boolean",
              "description": "Whether the field needs to be multilanguage or not"
            },
            "api_key": {
              "type": "string",
              "description": "Field API key",
              "example": "title"
            },
            "hint": {
              "type": ["string", "null"],
              "description": "Field hint",
              "example": "This field will be used as post title"
            },
            "validators": {
              "type": "object",
              "description": "Optional field validations",
              "example": {
                "required": {}
              }
            },
            "appeareance": {
              "type": "object",
              "required": ["editor", "parameters"],
              "description": "Field appeareance",
              "example": {
                "editor": "single_line",
                "parameters": {
                  "heading": false
                },
                "addons": []
              },
              "properties": {
                "editor": {
                  "type": "string"
                },
                "parameters": {
                  "type": "object"
                }
              }
            },
            "position": {
              "type": "integer",
              "description": "Ordering index",
              "example": 1
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["item_type"],
          "additionalProperties": false,
          "properties": {
            "item_type": {
              "type": "object",
              "description": "Field item type",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/item_type/definitions/data"
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/field/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/field/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/field/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/field/definitions/relationships"
        }
      }
    },
    "user": {
      "position": 5,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Invite a new editor",
          "href": "/users",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/user/definitions/type"
                  },
                  "attributes": {
                    "type": "object",
                    "required": ["email", "first_name", "last_name"],
                    "additionalProperties": false,
                    "properties": {
                      "email": {
                        "$ref": "#/definitions/user/definitions/attributes/properties/email"
                      },
                      "first_name": {
                        "$ref": "#/definitions/user/definitions/attributes/properties/first_name"
                      },
                      "last_name": {
                        "$ref": "#/definitions/user/definitions/attributes/properties/last_name"
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": ["role"],
                    "properties": {
                      "role": {
                        "$ref": "#/definitions/user/definitions/relationships/properties/role"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/user"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update an editor",
          "href": "/users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/user/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/user/properties/id"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "email": {
                        "$ref": "#/definitions/user/definitions/attributes/properties/email"
                      },
                      "first_name": {
                        "$ref": "#/definitions/user/definitions/attributes/properties/first_name"
                      },
                      "last_name": {
                        "$ref": "#/definitions/user/definitions/attributes/properties/last_name"
                      },
                      "password": {
                        "type": "string",
                        "description": "Password",
                        "example": "supersecret"
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "role": {
                        "$ref": "#/definitions/user/definitions/relationships/properties/role"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/user"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all editors",
          "href": "/users",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve an editor",
          "href": "/users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/user"
              }
            }
          }
        },
        {
          "method": "POST",
          "rel": "reset_password",
          "title": "Reset password",
          "description": "Request a password reset",
          "private": true,
          "href": "/users/reset_password",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/user/definitions/type"
                  },
                  "attributes": {
                    "type": "object",
                    "required": ["email"],
                    "additionalProperties": false,
                    "properties": {
                      "email": {
                        "$ref": "#/definitions/user/definitions/attributes/properties/email"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete an editor",
          "href": "/users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/user"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "type": "object",
      "title": "Editor",
      "description": "A DatoCMS administrative area can be accessed by multiple people. Every editor is linked to a specific Role, which describes what actions it will be able to perform once logged in.",
      "required": ["type", "id", "attributes", "relationships"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/user/properties/type"
            },
            "id": {
              "$ref": "#/definitions/user/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/user/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^user$",
          "example": "user"
        },
        "id": {
          "description": "ID of editor",
          "type": "string",
          "example": "312"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": ["email", "first_name", "last_name", "state"],
          "additionalProperties": false,
          "properties": {
            "email": {
              "type": "string",
              "description": "Email",
              "example": "mark.smith@example.com"
            },
            "first_name": {
              "type": "string",
              "description": "First name",
              "example": "Mark"
            },
            "last_name": {
              "type": "string",
              "description": "Last name",
              "example": "Smith"
            },
            "state": {
              "type": "string",
              "enum": ["INVITATION_PENDING", "REGISTERED"],
              "description": "Status of user registration",
              "example": "REGISTERED"
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["role"],
          "additionalProperties": false,
          "properties": {
            "role": {
              "type": "object",
              "description": "Role",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/role/definitions/data"
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/user/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/user/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/user/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/user/definitions/relationships"
        }
      }
    },
    "search_result": {
      "position": 6,
      "links": [
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "Search for results",
          "href": "/search-results",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/search_result"
                }
              },
              "meta": {
                "type": "object",
                "required": ["total_count"],
                "additionalProperties": false,
                "properties": {
                  "total_count": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "type": "object",
      "title": "Search result",
      "description": "DatoCMS Site Search is a way to deliver tailored search results to your site visitors. This is the endpoint you can use to query for results.",
      "required": ["type", "id", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/search_result/properties/type"
            },
            "id": {
              "$ref": "#/definitions/search_result/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/search_result/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^search_result$",
          "example": "search_result"
        },
        "id": {
          "description": "ID of result",
          "type": "string",
          "example": "312"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": ["title", "body_excerpt", "url", "score", "highlight"],
          "additionalProperties": false,
          "properties": {
            "title": {
              "type": "string",
              "description": "Page title",
              "example": "My Page"
            },
            "body_excerpt": {
              "type": "string",
              "description": "First lines of body",
              "example": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed eiusmod"
            },
            "url": {
              "type": "string",
              "description": "URL",
              "example": "Smith"
            },
            "score": {
              "type": "number",
              "description": "Score",
              "example": 11.3
            },
            "highlight": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "title": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Foo <em>bar</em> qux"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "body": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Foo <em>bar</em> qux"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/search_result/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/search_result/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/search_result/definitions/attributes"
        }
      }
    },
    "session": {
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new session",
          "private": true,
          "href": "/sessions",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": ["type", "attributes"],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": ["string"],
                        "description": "JSON API type field",
                        "pattern": "^email_credentials$",
                        "example": "email_credentials"
                      },
                      "attributes": {
                        "description": "JSON API attributes",
                        "type": "object",
                        "required": ["email", "password"],
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email",
                            "example": "foo@bar.com"
                          },
                          "password": {
                            "type": "string",
                            "description": "Password",
                            "example": "changeme"
                          },
                          "otp": {
                            "type": "string",
                            "description": "Two-factor authentication one-time password",
                            "example": "123512"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": ["type", "attributes"],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": ["string"],
                        "description": "JSON API type field",
                        "pattern": "^password_reset$",
                        "example": "password_reset"
                      },
                      "attributes": {
                        "description": "JSON API attributes",
                        "type": "object",
                        "required": ["token", "password"],
                        "additionalProperties": false,
                        "properties": {
                          "token": {
                            "type": "string",
                            "description": "Invitation token",
                            "example": "XXXYYYZZZ"
                          },
                          "password": {
                            "type": "string",
                            "description": "Password",
                            "example": "changeme"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": ["type", "attributes"],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": ["string"],
                        "description": "JSON API type field",
                        "pattern": "^invitation$",
                        "example": "invitation"
                      },
                      "attributes": {
                        "description": "JSON API attributes",
                        "type": "object",
                        "required": ["token", "password"],
                        "additionalProperties": false,
                        "properties": {
                          "token": {
                            "type": "string",
                            "description": "Invitation token",
                            "example": "XXXYYYZZZ"
                          },
                          "password": {
                            "type": "string",
                            "description": "Password",
                            "example": "changeme"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data", "included"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/session"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Session",
      "description": "A session is required to access to read-and-write API endpoints",
      "type": "object",
      "required": ["type", "id", "relationships"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/session/properties/type"
            },
            "id": {
              "$ref": "#/definitions/session/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/session/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^session$",
          "example": "session"
        },
        "id": {
          "description": "JSON web token for the session",
          "type": "string",
          "example": "eyJCJhbGci.eyJhaWwuY29tIn0.32wQOMci"
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["user"],
          "additionalProperties": false,
          "properties": {
            "user": {
              "type": "object",
              "description": "The user associated with the session",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/user/definitions/data"
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/session/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/session/definitions/id"
        },
        "relationships": {
          "$ref": "#/definitions/session/definitions/relationships"
        }
      }
    },
    "role": {
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new role",
          "href": "/roles",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/role/definitions/type"
                  },
                  "attributes": {
                    "$ref": "#/definitions/role/definitions/attributes"
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/role"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update a role",
          "href": "/roles/{(%2Fschemata%2Frole%23%2Fdefinitions%2Frole%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/role/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/role/properties/id"
                  },
                  "attributes": {
                    "$ref": "#/definitions/role/properties/attributes"
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/role"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all roles",
          "href": "/roles",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/role"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a role",
          "href": "/roles/{(%2Fschemata%2Frole%23%2Fdefinitions%2Frole%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/role"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a role",
          "href": "/roles/{(%2Fschemata%2Frole%23%2Fdefinitions%2Frole%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/role"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Role",
      "description": "A Role represents a specific set of actions an editor (or an API token) can perform on your administrative area.",
      "type": "object",
      "required": ["type", "id", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/role/properties/type"
            },
            "id": {
              "$ref": "#/definitions/role/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/role/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^role$",
          "example": "role"
        },
        "id": {
          "description": "ID of role",
          "type": "string",
          "example": "34"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": [
            "name",
            "can_edit_site",
            "can_edit_favicon",
            "can_edit_schema",
            "can_manage_users",
            "can_manage_webhooks",
            "can_manage_deployment_environments",
            "can_manage_access_tokens",
            "can_perform_site_search",
            "positive_item_type_permissions",
            "negative_item_type_permissions",
            "positive_deployment_environment_permissions",
            "negative_deployment_environment_permissions"
          ],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the role",
              "example": "Editor"
            },
            "can_edit_favicon": {
              "type": "boolean",
              "description": "Can users edit the site favicon/global SEO settings?",
              "example": true
            },
            "can_edit_site": {
              "type": "boolean",
              "description": "Can users edit the site settings?",
              "example": true
            },
            "can_edit_schema": {
              "type": "boolean",
              "description": "Can users edit the schema?",
              "example": true
            },
            "can_manage_users": {
              "type": "boolean",
              "description": "Can users invite other users?",
              "example": true
            },
            "can_manage_shared_filters": {
              "type": "boolean",
              "description": "Can users manage shared filters?",
              "example": true
            },
            "can_manage_deployment_environments": {
              "type": "boolean",
              "description": "Can users manage deployment environments?",
              "example": true
            },
            "can_manage_webhooks": {
              "type": "boolean",
              "description": "Can users manage webhooks?",
              "example": true
            },
            "can_manage_access_tokens": {
              "type": "boolean",
              "description": "Can manage access tokens",
              "example": true
            },
            "can_perform_site_search": {
              "type": "boolean",
              "description": "Can perform site search",
              "example": true
            },
            "positive_item_type_permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["item_type", "action", "on_creator"],
                "additionalProperties": false,
                "properties": {
                  "item_type": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/item_type/definitions/data/properties/id"
                      },
                      {
                        "type": ["null"]
                      }
                    ]
                  },
                  "action": {
                    "type": ["string"],
                    "enum": [
                      "all",
                      "read",
                      "update",
                      "create",
                      "delete",
                      "publish",
                      "edit_creator"
                    ],
                    "description": "Permitted action",
                    "example": "all"
                  },
                  "on_creator": {
                    "type": ["string", "null"],
                    "enum": ["anyone", "self", "role", null],
                    "description": "Permitted creator",
                    "example": "self"
                  }
                }
              }
            },
            "negative_item_type_permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["item_type", "action"],
                "additionalProperties": false,
                "properties": {
                  "item_type": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/item_type/definitions/data/properties/id"
                      },
                      {
                        "type": ["null"]
                      }
                    ]
                  },
                  "action": {
                    "type": ["string"],
                    "enum": [
                      "all",
                      "read",
                      "update",
                      "create",
                      "delete",
                      "publish",
                      "edit_creator"
                    ],
                    "description": "Permitted action",
                    "example": "all"
                  },
                  "on_creator": {
                    "type": ["string", "null"],
                    "enum": ["anyone", "self", "role", null],
                    "description": "Permitted creator",
                    "example": "self"
                  }
                }
              }
            },
            "positive_deployment_environment_permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["deployment_environment"],
                "additionalProperties": false,
                "properties": {
                  "deployment_environment": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/deployment_environment/definitions/data/properties/id"
                      },
                      {
                        "type": ["null"]
                      }
                    ]
                  }
                }
              }
            },
            "negative_deployment_environment_permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["deployment_environment"],
                "additionalProperties": false,
                "properties": {
                  "deployment_environment": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/deployment_environment/definitions/data/properties/id"
                      },
                      {
                        "type": ["null"]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["deployment_environments"],
          "additionalProperties": false,
          "properties": {
            "deployment_environments": {
              "type": "object",
              "description": "Environments on which this role can deploy",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/deployment_environment/definitions/data"
                  }
                }
              }
            },
            "parent": {
              "type": "object",
              "description": "Parent menu item",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "type": ["null"]
                    },
                    {
                      "$ref": "#/definitions/menu_item/definitions/data"
                    }
                  ],
                  "example": null
                }
              }
            },
            "children": {
              "type": "object",
              "description": "Underlying menu items",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/menu_item/definitions/data"
                  }
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/role/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/role/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/role/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/role/definitions/relationships"
        }
      }
    },
    "access_token": {
      "position": 8,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new access token",
          "href": "/access_tokens",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/access_token/definitions/type"
                  },
                  "attributes": {
                    "type": "object",
                    "required": [
                      "name",
                      "can_access_cda",
                      "can_access_cda_preview",
                      "can_access_cma"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/access_token/definitions/attributes/properties/name"
                      },
                      "can_access_cda": {
                        "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda"
                      },
                      "can_access_cda_preview": {
                        "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda_preview"
                      },
                      "can_access_cma": {
                        "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cma"
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": ["role"],
                    "properties": {
                      "role": {
                        "$ref": "#/definitions/access_token/definitions/relationships/properties/role"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/access_token"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update an access token",
          "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/access_token/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/access_token/properties/id"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "name",
                      "can_access_cda",
                      "can_access_cda_preview",
                      "can_access_cma"
                    ],
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/access_token/definitions/attributes/properties/name"
                      },
                      "can_access_cda": {
                        "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda"
                      },
                      "can_access_cda_preview": {
                        "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda_preview"
                      },
                      "can_access_cma": {
                        "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cma"
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": ["role"],
                    "properties": {
                      "role": {
                        "$ref": "#/definitions/access_token/definitions/relationships/properties/role"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/access_token"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all access tokens",
          "href": "/access_tokens",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/access_token"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a access tokens",
          "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/access_token"
              }
            }
          }
        },
        {
          "method": "POST",
          "rel": "regenerate_token",
          "title": "Regenerate token",
          "description": "Request a new API token",
          "private": true,
          "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}/regenerate_token",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/access_token"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete an access token",
          "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/access_token"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "type": "object",
      "title": "API token",
      "description": "An API token allows access to our API. It is linked to a Role, which describes what actions can be performed.",
      "required": ["type", "id", "attributes", "relationships"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/access_token/properties/type"
            },
            "id": {
              "$ref": "#/definitions/access_token/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/access_token/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^access_token$",
          "example": "access_token"
        },
        "id": {
          "description": "ID of access_token",
          "type": "string",
          "example": "312"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": [
            "name",
            "hardcoded_type",
            "can_access_cda",
            "can_access_cda_preview",
            "can_access_cma"
          ],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of access token",
              "example": "Read-only API token"
            },
            "token": {
              "type": "string",
              "description": "The actual API token",
              "example": "XXXXXXXXXXXXXXX"
            },
            "can_access_cda": {
              "type": "boolean",
              "description": "Whether this access token can access the Content Delivery API published content endpoint",
              "example": true
            },
            "can_access_cda_preview": {
              "type": "boolean",
              "description": "Whether this access token can access the Content Delivery API draft content endpoint",
              "example": true
            },
            "can_access_cma": {
              "type": "boolean",
              "description": "Whether this access token can access the Content Management API",
              "example": true
            },
            "hardcoded_type": {
              "type": ["null", "string"]
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["role"],
          "additionalProperties": false,
          "properties": {
            "role": {
              "type": "object",
              "description": "Role",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/role/definitions/data"
                    },
                    {
                      "type": ["null"]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/access_token/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/access_token/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/access_token/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/access_token/definitions/relationships"
        }
      }
    },
    "upload": {
      "position": 9,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new upload",
          "href": "/uploads",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/upload/definitions/type"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": ["size", "path", "format"],
                    "properties": {
                      "size": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/size"
                      },
                      "width": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/width"
                      },
                      "height": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/height"
                      },
                      "path": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/path"
                      },
                      "format": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/format"
                      },
                      "alt": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/alt"
                      },
                      "title": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/title"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/upload"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all uploads",
          "href": "/uploads",
          "schema": {
            "type": ["object"],
            "properties": {
              "filter[type]": {
                "description": "Type of uplod",
                "enum": ["file", "image", "video", "not_used", "other"],
                "type": ["string"],
                "example": "image"
              },
              "filter[query]": {
                "description": "Textual query to match",
                "example": "foobar",
                "type": ["string"]
              },
              "sort[direction]": {
                "description": "Ordering direction by upload date",
                "enum": ["asc", "desc"],
                "type": ["string"],
                "example": "desc"
              },
              "page[offset]": {
                "description": "Index of first record to fetch",
                "example": 2,
                "default": 1,
                "type": ["integer"]
              },
              "page[limit]": {
                "description": "Number of records to fetch",
                "example": 15,
                "default": 30,
                "type": ["integer"]
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/upload"
                }
              },
              "meta": {
                "type": "object",
                "required": [
                  "total_count",
                  "uploaded_bytes",
                  "uploadable_bytes"
                ],
                "additionalProperties": false,
                "properties": {
                  "total_count": {
                    "type": "integer"
                  },
                  "uploaded_bytes": {
                    "type": "integer"
                  },
                  "uploadable_bytes": {
                    "type": ["integer", "null"]
                  }
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a upload",
          "href": "/uploads/{(%2Fschemata%2Fupload%23%2Fdefinitions%2Fupload%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/upload"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a upload",
          "href": "/uploads/{(%2Fschemata%2Fupload%23%2Fdefinitions%2Fupload%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/upload"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "batch_destroy",
          "title": "Batch delete",
          "description": "Delete multiple uploads",
          "href": "/uploads",
          "schema": {
            "type": ["object"],
            "properties": {
              "filter[ids]": {
                "description": "IDs to fetch, comma separated",
                "example": "42,86",
                "type": ["string"]
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/job"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update a upload",
          "href": "/uploads/{(%2Fschemata%2Fupload%23%2Fdefinitions%2Fupload%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/upload/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/upload/properties/id"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/path"
                      },
                      "size": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/size"
                      },
                      "width": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/width"
                      },
                      "height": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/height"
                      },
                      "format": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/format"
                      },
                      "alt": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/alt"
                      },
                      "title": {
                        "$ref": "#/definitions/upload/definitions/attributes/properties/title"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/upload"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Upload",
      "description": "Every file you upload to DatoCMS will be retrievable from this endpoint.",
      "type": "object",
      "required": ["type", "id", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/upload/properties/type"
            },
            "id": {
              "$ref": "#/definitions/upload/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/upload/properties/id"
        },
        "type": {
          "description": "JSON API type upload",
          "type": ["string"],
          "pattern": "^upload$",
          "example": "upload"
        },
        "id": {
          "description": "ID of upload",
          "type": "string",
          "example": "666"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": ["size", "path", "url", "format"],
          "additionalProperties": false,
          "properties": {
            "size": {
              "type": "integer",
              "description": "size of the upload",
              "example": 444
            },
            "width": {
              "type": ["null", "integer"],
              "description": "Width of image",
              "example": 30
            },
            "height": {
              "type": ["null", "integer"],
              "description": "Height of image",
              "example": 30
            },
            "path": {
              "type": "string",
              "description": "Upload path",
              "example": "/45/1496845848-digital-cats.jpg"
            },
            "url": {
              "type": "string",
              "description": "Upload URL",
              "example": "https://www.datocms-assets.com/45/1496845848-digital-cats.jpg"
            },
            "format": {
              "type": "string",
              "description": "Format",
              "example": "jpg"
            },
            "alt": {
              "type": ["string", "null"],
              "description": "Alt",
              "example": "Nyan the cat"
            },
            "title": {
              "type": ["string", "null"],
              "description": "Upload title",
              "example": "My cat"
            },
            "is_image": {
              "type": "boolean",
              "description": "Is this upload an image?",
              "example": true
            },
            "created_at": {
              "description": "Date of upload",
              "type": ["null", "string"],
              "format": "date-time"
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["site"],
          "additionalProperties": false,
          "properties": {
            "site": {
              "type": "object",
              "description": "Field item type",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/site/definitions/data"
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/upload/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/upload/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/upload/definitions/attributes"
        }
      }
    },
    "plugin": {
      "position": 10,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new plugin",
          "href": "/plugins",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/plugin/definitions/type"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/name"
                      },
                      "description": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/description"
                      },
                      "url": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/url"
                      },
                      "field_types": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/field_types"
                      },
                      "parameter_definitions": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/parameter_definitions"
                      },
                      "plugin_type": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/plugin_type"
                      },
                      "package_name": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/package_name"
                      },
                      "package_version": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/package_version"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/plugin"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update an plugin",
          "href": "/plugins/{(%2Fschemata%2Fplugin%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/plugin/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/plugin/properties/id"
                  },
                  "attributes": {
                    "type": "object",
                    "required": ["parameters"],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/name"
                      },
                      "description": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/description"
                      },
                      "url": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/url"
                      },
                      "parameters": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/parameters"
                      },
                      "package_version": {
                        "$ref": "#/definitions/plugin/definitions/attributes/properties/package_version"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/plugin"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all plugins",
          "href": "/plugins",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/plugin"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a plugins",
          "href": "/plugins/{(%2Fschemata%2Fplugin%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/plugin"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete an plugin",
          "href": "/plugins/{(%2Fschemata%2Fplugin%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/plugin"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Plugin",
      "description": "Plugins enable developers to replace DatoCMS field components with HTML5 applications so the editing experiences of the DatoCMS web app can be customized.",
      "type": "object",
      "required": ["type", "id", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/plugin/properties/type"
            },
            "id": {
              "$ref": "#/definitions/plugin/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/plugin/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^plugin$",
          "example": "plugin"
        },
        "id": {
          "description": "ID of plugin",
          "type": "string",
          "example": "124"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": [
            "name",
            "field_types",
            "url",
            "parameters",
            "parameter_definitions",
            "plugin_type"
          ],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the plugin",
              "example": "5 stars"
            },
            "description": {
              "type": ["null", "string"],
              "description": "A textual description for the plugin",
              "example": "A simple field editor that allows a nicer editing rating experience"
            },
            "package_name": {
              "type": ["null", "string"],
              "description": "Plugin Npm package name",
              "example": "datocms-plugin-star-rating-editor"
            },
            "package_version": {
              "type": ["null", "string"],
              "description": "Plugin Npm version",
              "example": "0.0.4"
            },
            "plugin_type": {
              "type": "string",
              "description": "The type of extension",
              "enum": ["field_editor", "sidebar", "field_addon"],
              "example": "field"
            },
            "field_types": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "boolean",
                  "date",
                  "date_time",
                  "float",
                  "integer",
                  "string",
                  "text",
                  "lat_lon",
                  "json",
                  "seo",
                  "link",
                  "links",
                  "video",
                  "color"
                ]
              },
              "description": "On which types of field this plugin can be used",
              "example": ["integer", "float"]
            },
            "url": {
              "type": "string",
              "description": "The name of the plugin",
              "example": "https://cdn.rawgit.com/datocms/extensions/master/samples/five-stars/extension.js"
            },
            "parameters": {
              "type": "object",
              "description": "Global parameters which are set on on a project level. Values apply globally to every instance of an plugin within the project.",
              "example": {
                "devMode": true
              }
            },
            "parameter_definitions": {
              "type": "object",
              "description": "Parameter definitions for the plugin",
              "required": ["global", "instance"],
              "additionalProperties": false,
              "properties": {
                "global": {
                  "type": "array"
                },
                "instance": {
                  "type": "array"
                }
              },
              "example": {
                "global": [
                  {
                    "id": "devMode",
                    "type": "boolean",
                    "label": "Run in development mode"
                  }
                ],
                "instance": [
                  {
                    "id": "halfStars",
                    "type": "boolean",
                    "label": "Allow half stars ratings?",
                    "default": false,
                    "hint": "If enabled, rate using whole stars, if enabled, it doesn't use half-steps"
                  },
                  {
                    "id": "totalStars",
                    "type": "integer",
                    "label": "Amount of stars to show",
                    "default": 5,
                    "hint": ""
                  }
                ]
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/plugin/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/plugin/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/plugin/definitions/attributes"
        }
      }
    },
    "plan": {
      "links": [],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Plan",
      "description": "A field represents a plan",
      "type": "object",
      "required": ["type", "id", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/plan/properties/type"
            },
            "id": {
              "$ref": "#/definitions/plan/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/plan/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^plan$",
          "example": "plan"
        },
        "id": {
          "description": "ID of plan",
          "type": "string",
          "example": "124"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": ["name"],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the plan",
              "example": "Basic"
            },
            "active": {
              "type": "boolean",
              "description": "Whether this plan is active or legacy",
              "example": true
            },
            "custom_domain": {
              "type": "boolean",
              "description": "Whether custom domain can be enabled or not",
              "example": true
            },
            "users": {
              "type": ["null", "integer"],
              "description": "Number of users that can be invited",
              "example": 2
            },
            "indexable_pages": {
              "type": ["null", "integer"],
              "description": "Number of indexable pages",
              "example": 1000
            },
            "deployment_environments": {
              "type": ["null", "integer"],
              "description": "Number of deployment environments",
              "example": 4
            },
            "plugins": {
              "type": ["null", "integer"],
              "description": "Number of plugins",
              "example": 4
            },
            "items": {
              "type": ["null", "integer"],
              "description": "Number of records allowed",
              "example": 5000
            },
            "monthly_price": {
              "type": "integer",
              "description": "Monthly price",
              "example": 19
            },
            "yearly_price": {
              "type": "integer",
              "description": "Yearly price",
              "example": 189
            },
            "uploadable_bytes": {
              "type": ["null", "integer"],
              "description": "Uploadable bytes",
              "example": 1073741824
            },
            "traffic_bytes": {
              "type": ["null", "integer"],
              "description": "Amount of asset data transferred between our Asset CDN and GraphQL Content Delivery API and content consumers",
              "example": 1073741824
            },
            "api_calls": {
              "type": ["null", "integer"],
              "description": "The number of requests made to both our Content Management and Content Delivery APIs",
              "example": 100000
            },
            "access_tokens": {
              "type": ["null", "integer"],
              "description": "The number of different API tokens you can generate, each which different permissions",
              "example": 10
            },
            "roles": {
              "type": ["null", "integer"],
              "description": "Number of roles allowed",
              "example": 10
            },
            "locales": {
              "type": ["null", "integer"],
              "description": "Number of locales allowed",
              "example": 10
            },
            "item_types": {
              "type": ["null", "integer"],
              "description": "Number of models allowed",
              "example": 25
            },
            "version_history": {
              "type": "boolean",
              "description": "Whether version history can be enabled or not",
              "example": true
            },
            "otp": {
              "type": "boolean",
              "description": "Whether two-factor authentication can be enabled or not",
              "example": true
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/plan/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/plan/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/plan/definitions/attributes"
        }
      }
    },
    "scheduled_publication": {
      "position": 15,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new scheduled publication",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/scheduled_publication",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/scheduled_publication/definitions/type"
                  },
                  "attributes": {
                    "$ref": "#/definitions/scheduled_publication/definitions/attributes"
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data", "included"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/scheduled_publication"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item"
                }
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a scheduled publication",
          "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/scheduled_publication",
          "targetSchema": {
            "type": "object",
            "required": ["data", "included"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/scheduled_publication"
              },
              "included": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item"
                }
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Scheduled publication",
      "description": "You can create scheduled publication to publish records in the future",
      "type": "object",
      "required": ["type", "id", "attributes", "relationships"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/scheduled_publication/properties/type"
            },
            "id": {
              "$ref": "#/definitions/scheduled_publication/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/scheduled_publication/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^scheduled_publication$",
          "example": "scheduled_publication$"
        },
        "id": {
          "description": "ID of scheduled_publication",
          "type": "string",
          "example": "34"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "publication_scheduled_at": {
              "type": ["null", "string"],
              "format": "date-time",
              "description": "The future date for the publication",
              "example": "2017-02-10T11:03:42.208Z"
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["item"],
          "additionalProperties": false,
          "properties": {
            "item": {
              "type": "object",
              "description": "Item",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/item/definitions/data"
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/scheduled_publication/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/scheduled_publication/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/scheduled_publication/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/scheduled_publication/definitions/relationships"
        }
      }
    },
    "webhook": {
      "position": 11,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new webhook",
          "href": "/webhooks",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/webhook/definitions/type"
                  },
                  "attributes": {
                    "type": "object",
                    "required": [
                      "name",
                      "url",
                      "headers",
                      "events",
                      "http_basic_user",
                      "http_basic_password"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/name"
                      },
                      "url": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/url"
                      },
                      "headers": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/headers"
                      },
                      "events": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/events"
                      },
                      "http_basic_user": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_user"
                      },
                      "http_basic_password": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_password"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/webhook"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update a webhook",
          "href": "/webhooks/{(%2Fschemata%2Fwebhook%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/webhook/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/webhook/properties/id"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/name"
                      },
                      "url": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/url"
                      },
                      "headers": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/headers"
                      },
                      "events": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/events"
                      },
                      "http_basic_user": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_user"
                      },
                      "http_basic_password": {
                        "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_password"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/webhook"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all webhooks",
          "href": "/webhooks",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/webhook"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a webhook",
          "href": "/webhooks/{(%2Fschemata%2Fwebhook%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/webhook"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a webhook",
          "href": "/webhooks/{(%2Fschemata%2Fwebhook%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/webhook"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "type": "object",
      "title": "Webhook",
      "description": "A webhook allows to make requests following certain Dato events. It is linked to a Role, which describes what actions can be performed.",
      "required": ["type", "id", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/webhook/properties/type"
            },
            "id": {
              "$ref": "#/definitions/webhook/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/webhook/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^webhook$",
          "example": "webhook"
        },
        "id": {
          "description": "ID of webhook",
          "type": "string",
          "example": "312"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": [
            "name",
            "url",
            "headers",
            "events",
            "http_basic_user",
            "http_basic_password"
          ],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "Unique name for the webhook",
              "example": "Item type creation/update"
            },
            "url": {
              "type": "string",
              "description": "The URL to be called",
              "example": "https://www.example.com/webhook"
            },
            "http_basic_user": {
              "type": ["string", "null"],
              "description": "HTTP Basic Authorization username",
              "example": "user"
            },
            "http_basic_password": {
              "type": ["string", "null"],
              "description": "HTTP Basic Authorization password",
              "example": "password"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers that will be sent",
              "example": {
                "X-Foo": "Bar"
              }
            },
            "events": {
              "type": "array",
              "description": "All the events you will be notified for",
              "example": [
                {
                  "entity_type": "item_type",
                  "event_types": ["update", "create"],
                  "filter": {
                    "entity_type": "item_type",
                    "entity_ids": ["42", "43"]
                  }
                }
              ]
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/webhook/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/webhook/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/webhook/definitions/attributes"
        }
      }
    },
    "webhook_call": {
      "position": 12,
      "links": [
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all webhooks calls",
          "href": "/webhooks/calls",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/webhook_call"
                }
              }
            }
          }
        },
        {
          "method": "POST",
          "rel": "resend_webhook",
          "title": "Resend webhook",
          "description": "Resends the webhook with the same parameters",
          "private": true,
          "href": "/webhooks/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}/resend_webhook",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/webhook_call"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Webhook call",
      "description": "Represents a log entry in the webhooks activity list.",
      "type": "object",
      "required": ["type", "id", "attributes", "relationships"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/webhook_call/properties/type"
            },
            "id": {
              "$ref": "#/definitions/webhook_call/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/webhook_call/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^webhook_call$",
          "example": "webhook_call"
        },
        "id": {
          "description": "ID of webhook call",
          "type": "string",
          "example": "42"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": [
            "entity_type",
            "event_type",
            "created_at",
            "request_url",
            "request_headers",
            "request_payload",
            "response_status",
            "response_headers",
            "response_payload"
          ],
          "additionalProperties": false,
          "properties": {
            "entity_type": {
              "type": "string",
              "enum": ["item", "item_type", "upload"],
              "description": "The subject of webhook triggering",
              "example": "item"
            },
            "event_type": {
              "type": "string",
              "enum": ["create", "update", "delete", "publish", "unpublish"],
              "description": "The event that triggers the webhook call",
              "example": "update"
            },
            "created_at": {
              "description": "The moment the call occurred",
              "type": ["string"],
              "format": "date-time",
              "example": "2016-09-20T18:50:24.914Z"
            },
            "request_url": {
              "description": "The url that the webhook called",
              "type": "string",
              "example": "https://www.example.com/webhook"
            },
            "request_headers": {
              "type": "object",
              "description": "The request's headers",
              "example": {
                "Accept": "*/*",
                "User-Agent": "DatoCMS (datocms.com)",
                "Authorization": "Basic Y2lhbzptaWFv",
                "Content-Type": "application/json"
              }
            },
            "request_payload": {
              "type": "string",
              "description": "The body of the request",
              "example": "{ \"entity_type\": \"item\", \"event_type\": \"update\", \"entity\": { \"id\": \"293467\", \"type\": \"item\", \"attributes\": { \"created_at\": \"2018-05-22T10:13:00.461Z\", \"updated_at\": \"2018-07-30T14:13:50.068Z\", \"is_valid\": true, \"avatar\": { \"path\": \"/205/1526984443-untitled-drawing.png\", \"format\": \"png\", \"size\": 242630, \"alt\": null, \"title\": null, \"width\": 329, \"height\": 286 }, \"name\": \"3Francesco Falchy\", \"gallery\": [] }, \"relationships\": { \"item_type\": { \"data\": { \"id\": \"1423\", \"type\": \"item_type\" } }, \"published_version\": { \"data\": { \"id\": \"670532\", \"type\": \"item_version\" } }, \"current_version\": { \"data\": { \"id\": \"670532\", \"type\": \"item_version\" } } } } }"
            },
            "response_status": {
              "description": "The status of the response",
              "type": ["integer", "null"],
              "example": 200
            },
            "response_headers": {
              "type": "object",
              "description": "The response's headers",
              "example": {
                "via": "1.1 vegur, 1.1 37c0945d19329fccc23efb283d01aa06.cloudfront.net (CloudFront)",
                "date": "Fri, 27 Jul 2018 11:59:20 GMT",
                "server": "gunicorn/19.6.0"
              }
            },
            "response_payload": {
              "type": ["string", "null"],
              "description": "The body of the response",
              "example": "ok"
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["webhook"],
          "additionalProperties": false,
          "properties": {
            "webhook": {
              "type": "object",
              "description": "The webhook which has been called",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/webhook/definitions/data"
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/webhook_call/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/webhook_call/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/webhook_call/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/webhook_call/definitions/relationships"
        }
      }
    },
    "deployment_environment": {
      "position": 13,
      "links": [
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all deployment environments for a site",
          "href": "/deployment-environments",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/deployment_environment"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a deployment environment",
          "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/deployment_environment"
              }
            }
          }
        },
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create deployment environment",
          "href": "/deployment-environments",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/deployment_environment/properties/type"
                  },
                  "attributes": {
                    "type": "object",
                    "required": [
                      "name",
                      "deploy_adapter",
                      "spider_enabled",
                      "frontend_url",
                      "deploy_settings",
                      "build_on_scheduled_publications"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/name"
                      },
                      "webhook_token": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/webhook_token"
                      },
                      "deploy_adapter": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_adapter"
                      },
                      "spider_enabled": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/spider_enabled"
                      },
                      "frontend_url": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/frontend_url"
                      },
                      "build_on_scheduled_publications": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/build_on_scheduled_publications"
                      },
                      "deploy_settings": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_settings"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/deployment_environment"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update deployment environment",
          "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/deployment_environment/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/deployment_environment/properties/id"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/name"
                      },
                      "deploy_adapter": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_adapter"
                      },
                      "spider_enabled": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/spider_enabled"
                      },
                      "frontend_url": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/frontend_url"
                      },
                      "build_on_scheduled_publications": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/build_on_scheduled_publications"
                      },
                      "deploy_settings": {
                        "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_settings"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/deployment_environment"
              }
            }
          }
        },
        {
          "method": "POST",
          "rel": "trigger",
          "title": "Trigger",
          "description": "Trigger a deploy",
          "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}/trigger"
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a deployment environment",
          "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/deployment_environment"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "type": "object",
      "title": "Deployment environment",
      "description": "Configuration for different deployment environments. You can have different staging and production environments in order to test your site before final deploy",
      "required": ["type", "id", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "description": "JSON API data",
          "type": "object",
          "required": ["type", "id"],
          "additionalProperteis": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/deployment_environment/properties/type"
            },
            "id": {
              "$ref": "#/definitions/deployment_environment/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/deployment_environment/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^deployment_environment$",
          "example": "deployment_environment"
        },
        "id": {
          "description": "ID of deployment_environment",
          "type": "string",
          "example": "1822"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": [
            "name",
            "deploy_adapter",
            "deploy_settings",
            "last_deploy_at",
            "last_build_at",
            "deploy_status",
            "webhook_token",
            "webhook_url",
            "scrape_status",
            "frontend_url",
            "spider_enabled",
            "build_on_scheduled_publications"
          ],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the environment",
              "example": "Production"
            },
            "deploy_adapter": {
              "type": "string",
              "description": "The deploy adapter",
              "example": "netlify"
            },
            "deploy_settings": {
              "type": "object",
              "description": "Additional configuration for deploy",
              "example": {
                "trigger_url": "https://api.netlify.com/build_hooks/XXX",
                "site_id": "XXX",
                "access_token": "YYY",
                "branch": "master"
              }
            },
            "last_build_at": {
              "type": ["string", "null"],
              "description": "Timestamp of the last build",
              "example": "2017-03-30T09:29:14.872Z"
            },
            "last_deploy_at": {
              "type": ["string", "null"],
              "description": "Timestamp of the last deploy",
              "example": "2017-03-30T09:29:14.872Z"
            },
            "deploy_status": {
              "type": "string",
              "description": "Status of last deploy",
              "example": "success"
            },
            "webhook_token": {
              "type": "string",
              "description": "Unique token of the webhook",
              "example": "xA1239ajsk123"
            },
            "webhook_url": {
              "type": "string",
              "description": "Notification webhook URL",
              "example": "https://webhooks.datocoms.com/xA1239ajsk123/deploy-results"
            },
            "scrape_status": {
              "type": "string",
              "description": "Status of site scraper",
              "example": "success"
            },
            "frontend_url": {
              "type": ["string", "null"],
              "description": "Public url of the site",
              "example": "https://www.mywebsite.com/"
            },
            "build_on_scheduled_publications": {
              "type": "boolean",
              "description": "Deploy on scheduled publication",
              "example": true
            },
            "spider_enabled": {
              "type": "boolean",
              "description": "Enable scraper on the site",
              "example": true
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/deployment_environment/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/deployment_environment/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/deployment_environment/definitions/attributes"
        }
      }
    },
    "item_type_filter": {
      "position": 14,
      "links": [
        {
          "method": "POST",
          "rel": "create",
          "title": "Create",
          "description": "Create a new filter",
          "href": "/item-type-filters",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "attributes", "relationships"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/item_type_filter/definitions/type"
                  },
                  "attributes": {
                    "$ref": "#/definitions/item_type_filter/definitions/attributes"
                  },
                  "relationships": {
                    "$ref": "#/definitions/item_type_filter/definitions/relationships"
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item_type_filter"
              }
            }
          }
        },
        {
          "method": "PUT",
          "rel": "update",
          "title": "Update",
          "description": "Update a filter",
          "href": "/item-type-filters/{(%2Fschemata%2Fitem_type_filter%23%2Fdefinitions%2Fitem_type_filter%2Fdefinitions%2Fidentity)}",
          "schema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "object",
                "required": ["type", "id", "attributes"],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "$ref": "#/definitions/item_type_filter/properties/type"
                  },
                  "id": {
                    "$ref": "#/definitions/item_type_filter/properties/id"
                  },
                  "attributes": {
                    "type": "object",
                    "description": "JSON API attributes",
                    "required": ["name", "filter"],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$ref": "#/definitions/item_type_filter/definitions/attributes/properties/name"
                      },
                      "filter": {
                        "$ref": "#/definitions/item_type_filter/definitions/attributes/properties/filter"
                      }
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item_type_filter"
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "instances",
          "title": "Index",
          "description": "List all filters",
          "href": "/item-type-filters",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/item_type_filter"
                }
              }
            }
          }
        },
        {
          "method": "GET",
          "rel": "self",
          "title": "Show",
          "description": "Retrieve a filter",
          "href": "/item-type-filters/{(%2Fschemata%2Fitem_type_filter%23%2Fdefinitions%2Fitem_type_filter%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item_type_filter"
              }
            }
          }
        },
        {
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete",
          "description": "Delete a filter",
          "href": "/item-type-filters/{(%2Fschemata%2Fitem_type_filter%23%2Fdefinitions%2Fitem_type_filter%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "type": "object",
            "required": ["data"],
            "additionalProperties": false,
            "properties": {
              "data": {
                "$ref": "#/definitions/item_type_filter"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Model filter",
      "description": "In DatoCMS you can create filters to help you (and other editors) quickly search for records",
      "type": "object",
      "required": ["type", "id", "relationships", "attributes"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/item_type_filter/properties/type"
            },
            "id": {
              "$ref": "#/definitions/item_type_filter/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/item_type_filter/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^item_type_filter$",
          "example": "item_type_filter"
        },
        "id": {
          "description": "ID of filter",
          "type": "string",
          "example": "34"
        },
        "attributes": {
          "description": "JSON API attributes",
          "type": "object",
          "required": ["name", "filter"],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the filter",
              "example": "Draft posts"
            },
            "filter": {
              "type": "object",
              "description": "The actual filter",
              "example": {
                "status": {
                  "eq": "draft"
                }
              }
            },
            "shared": {
              "type": "boolean",
              "description": "Whether it's a shared filter or not",
              "example": true
            }
          }
        },
        "relationships": {
          "description": "JSON API links",
          "type": "object",
          "required": ["item_type"],
          "additionalProperties": false,
          "properties": {
            "item_type": {
              "type": "object",
              "description": "Model associated with the filter",
              "required": ["data"],
              "additionalProperties": false,
              "properties": {
                "data": {
                  "$ref": "#/definitions/item_type/definitions/data"
                }
              }
            }
          }
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/item_type_filter/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/item_type_filter/definitions/id"
        },
        "attributes": {
          "$ref": "#/definitions/item_type_filter/definitions/attributes"
        },
        "relationships": {
          "$ref": "#/definitions/item_type_filter/definitions/relationships"
        }
      }
    },
    "job": {
      "position": 15,
      "links": [],
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Asyncronous job",
      "description": "",
      "type": "object",
      "required": ["type", "id"],
      "additionalProperties": false,
      "definitions": {
        "data": {
          "type": "object",
          "description": "JSON API data",
          "required": ["type", "id"],
          "additionalProperties": false,
          "properties": {
            "type": {
              "$ref": "#/definitions/job/properties/type"
            },
            "id": {
              "$ref": "#/definitions/job/properties/id"
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/job/properties/id"
        },
        "type": {
          "description": "JSON API type field",
          "type": ["string"],
          "pattern": "^job$",
          "example": "job"
        },
        "id": {
          "description": "ID of job",
          "type": "string",
          "example": "4235"
        }
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/job/definitions/type"
        },
        "id": {
          "$ref": "#/definitions/job/definitions/id"
        }
      }
    }
  }
}
